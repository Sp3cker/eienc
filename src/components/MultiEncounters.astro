---
import { getChoiceEncounters } from '../utils/encounterUtils/staticProcessor'
import { getSpeciesName } from '../utils/speciesData'
import { getMapName } from '../utils/generateMapLocations'
import { getSpeciesIdFromLabel } from '../utils/encounterUtils/pokemonEncounterProcessor'
import PokemonSprite from './PokemonSprite.astro'

const choiceGroups = getChoiceEncounters();
---

<div class="flex flex-col gap-1 print:break-before-page mx-5">
  <span class="h-[10mm] flex justify-center items-center text-center group-even:hidden"></span>
  <span class="text-center font-pixeloperator text-lg">Multiple Choice Encounters</span>
  <span class="text-center font-pixeloperator text-xs text-gray-600 mb-2">Each group here allows you to get a pokemon from it. Some are repeatable</span>
  
  <div class="flex flex-col gap-2 px-3">
    {choiceGroups.map((group) => {
      return (
        <div class="bg-white rounded border border-gray-200 p-2 break-inside-avoid">
          <!-- Card Header -->
          <div class="flex items-center justify-between mb-2 pb-1 border-b border-gray-100">
            <div class="flex items-center gap-2">
              <span class="font-pixeloperator font-bold text-sm text-gray-700">{getMapName(group.map)}</span>
            </div>
          </div>
          
          <!-- PokÃ©mon Options -->
          <div class="flex flex-wrap gap-1 mb-2">
            {group.choices.map((choice) => (
              <div class="flex items-center gap-1 border-2 border-zinc-700 px-2 py-1 rounded-lg">
                  <>
                    <PokemonSprite speciesId={getSpeciesIdFromLabel(choice.species)} size={16} />
                    <span class="text-xs text-gray-600 font-bold">{getSpeciesName(getSpeciesIdFromLabel(choice.species))}</span>
                  </>
                <span class="text-xs text-gray-700">Lv.{choice.level}</span>
              </div>
            ))}
          </div>
          
          <!-- Explanation -->
          <span class="text-xs text-gray-400 font-pixeloperator">{group.explanation}</span>
        </div>
      );
    })}
  </div>
</div>